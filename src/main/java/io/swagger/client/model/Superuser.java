/*
 * ChaOffice API
 * API definition for the ChaOffice project, a distributed platform for data and communication management in small and medium-sized enterprises (SMEs).
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Superuser
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-30T15:15:44.636736291Z[GMT]")

public class Superuser {
  @SerializedName("id")
  private String id = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("tokenKey")
  private String tokenKey = null;

  @SerializedName("emailVisibility")
  private Boolean emailVisibility = null;

  @SerializedName("verified")
  private Boolean verified = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("updated")
  private OffsetDateTime updated = null;

   /**
   * Unique identifier for the superuser.
   * @return id
  **/
  @Schema(description = "Unique identifier for the superuser.")
  public String getId() {
    return id;
  }

  public Superuser email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email address of the superuser.
   * @return email
  **/
  @Schema(description = "Email address of the superuser.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Superuser password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Password for the superuser.
   * @return password
  **/
  @Schema(description = "Password for the superuser.")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

   /**
   * Token key for authentication.
   * @return tokenKey
  **/
  @Schema(description = "Token key for authentication.")
  public String getTokenKey() {
    return tokenKey;
  }

  public Superuser emailVisibility(Boolean emailVisibility) {
    this.emailVisibility = emailVisibility;
    return this;
  }

   /**
   * Flag indicating email visibility.
   * @return emailVisibility
  **/
  @Schema(description = "Flag indicating email visibility.")
  public Boolean isEmailVisibility() {
    return emailVisibility;
  }

  public void setEmailVisibility(Boolean emailVisibility) {
    this.emailVisibility = emailVisibility;
  }

  public Superuser verified(Boolean verified) {
    this.verified = verified;
    return this;
  }

   /**
   * Flag indicating email verification status.
   * @return verified
  **/
  @Schema(description = "Flag indicating email verification status.")
  public Boolean isVerified() {
    return verified;
  }

  public void setVerified(Boolean verified) {
    this.verified = verified;
  }

   /**
   * Timestamp of superuser creation.
   * @return created
  **/
  @Schema(description = "Timestamp of superuser creation.")
  public OffsetDateTime getCreated() {
    return created;
  }

   /**
   * Timestamp of last update.
   * @return updated
  **/
  @Schema(description = "Timestamp of last update.")
  public OffsetDateTime getUpdated() {
    return updated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Superuser superuser = (Superuser) o;
    return Objects.equals(this.id, superuser.id) &&
        Objects.equals(this.email, superuser.email) &&
        Objects.equals(this.password, superuser.password) &&
        Objects.equals(this.tokenKey, superuser.tokenKey) &&
        Objects.equals(this.emailVisibility, superuser.emailVisibility) &&
        Objects.equals(this.verified, superuser.verified) &&
        Objects.equals(this.created, superuser.created) &&
        Objects.equals(this.updated, superuser.updated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, email, password, tokenKey, emailVisibility, verified, created, updated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Superuser {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    tokenKey: ").append(toIndentedString(tokenKey)).append("\n");
    sb.append("    emailVisibility: ").append(toIndentedString(emailVisibility)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
