/*
 * ChaOffice API
 * API definition for the ChaOffice project, a distributed platform for data and communication management in small and medium-sized enterprises (SMEs).
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * ExternalAuth
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-30T15:15:44.636736291Z[GMT]")

public class ExternalAuth {
  @SerializedName("id")
  private String id = null;

  @SerializedName("collectionRef")
  private String collectionRef = null;

  @SerializedName("recordRef")
  private String recordRef = null;

  @SerializedName("provider")
  private String provider = null;

  @SerializedName("providerId")
  private String providerId = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("updated")
  private OffsetDateTime updated = null;

   /**
   * Unique identifier.
   * @return id
  **/
  @Schema(description = "Unique identifier.")
  public String getId() {
    return id;
  }

  public ExternalAuth collectionRef(String collectionRef) {
    this.collectionRef = collectionRef;
    return this;
  }

   /**
   * Collection reference.
   * @return collectionRef
  **/
  @Schema(description = "Collection reference.")
  public String getCollectionRef() {
    return collectionRef;
  }

  public void setCollectionRef(String collectionRef) {
    this.collectionRef = collectionRef;
  }

  public ExternalAuth recordRef(String recordRef) {
    this.recordRef = recordRef;
    return this;
  }

   /**
   * Record reference.
   * @return recordRef
  **/
  @Schema(description = "Record reference.")
  public String getRecordRef() {
    return recordRef;
  }

  public void setRecordRef(String recordRef) {
    this.recordRef = recordRef;
  }

  public ExternalAuth provider(String provider) {
    this.provider = provider;
    return this;
  }

   /**
   * Authentication provider.
   * @return provider
  **/
  @Schema(description = "Authentication provider.")
  public String getProvider() {
    return provider;
  }

  public void setProvider(String provider) {
    this.provider = provider;
  }

  public ExternalAuth providerId(String providerId) {
    this.providerId = providerId;
    return this;
  }

   /**
   * Provider&#x27;s user ID.
   * @return providerId
  **/
  @Schema(description = "Provider's user ID.")
  public String getProviderId() {
    return providerId;
  }

  public void setProviderId(String providerId) {
    this.providerId = providerId;
  }

   /**
   * Creation timestamp.
   * @return created
  **/
  @Schema(description = "Creation timestamp.")
  public OffsetDateTime getCreated() {
    return created;
  }

   /**
   * Update timestamp.
   * @return updated
  **/
  @Schema(description = "Update timestamp.")
  public OffsetDateTime getUpdated() {
    return updated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalAuth externalAuth = (ExternalAuth) o;
    return Objects.equals(this.id, externalAuth.id) &&
        Objects.equals(this.collectionRef, externalAuth.collectionRef) &&
        Objects.equals(this.recordRef, externalAuth.recordRef) &&
        Objects.equals(this.provider, externalAuth.provider) &&
        Objects.equals(this.providerId, externalAuth.providerId) &&
        Objects.equals(this.created, externalAuth.created) &&
        Objects.equals(this.updated, externalAuth.updated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, collectionRef, recordRef, provider, providerId, created, updated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalAuth {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    collectionRef: ").append(toIndentedString(collectionRef)).append("\n");
    sb.append("    recordRef: ").append(toIndentedString(recordRef)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
